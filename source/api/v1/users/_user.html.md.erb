# User Endpoint

## Register New User

```javascript
var myHeaders = new Headers();
myHeaders.append("Content-Type", "application/json");

var raw = JSON.stringify({
  "email": "something@example.com",
  "password": "password",
  "password_confirmation": "password"
});

var requestOptions = {
  method: 'POST',
  headers: myHeaders,
  body: raw,
  redirect: 'follow'
};

fetch("https://joe-mecha-whether-sweater.herokuapp.com/api/v1/users", requestOptions)
  .then(response => response.text())
  .then(result => console.log(result))
  .catch(error => console.log('error', error));
```
```ruby
require "uri"
require "json"
require "net/http"

url = URI("https://joe-mecha-whether-sweater.herokuapp.com/api/v1/users")

http = Net::HTTP.new(url.host, url.port);
request = Net::HTTP::Post.new(url)
request["Content-Type"] = "application/json"
request.body = JSON.dump({
  "email": "something@example.com",
  "password": "password",
  "password_confirmation": "password"
})

response = http.request(request)
puts response.read_body
```
```python
import http.client
import json

conn = http.client.HTTPSConnection("joe-mecha-whether-sweater.herokuapp.com")
payload = json.dumps({
  "email": "something@example.com",
  "password": "password",
  "password_confirmation": "password"
})
headers = {
  'Content-Type': 'application/json'
}
conn.request("POST", "/api/v1/users", payload, headers)
res = conn.getresponse()
data = res.read()
print(data.decode("utf-8"))
```
<%# ```http
POST /api/v1/users HTTP/1.1
Host: localhost:3000
Content-Type: application/json
Content-Length: 102

{
  "email": "something@example.com",
  "password": "password",
  "password_confirmation": "password"
}
``` %>

> This is the expected response

```json
{
    "data": {
        "id": "1",
        "type": "users",
        "attributes": {
            "email": "something@example.com",
            "api_key": "5583776ba1151cd09ca2ca95a272f14c"
        }
    }
}
```

### Description
To be utilized by the front end. Successful request adds a new user to the database. Encrypts password and replies with unique api key.


### Request Information
|Category|Value|
|------|------|
|HTTP request| 'POST' |
|URL|https://joe-mecha-whether-sweater.herokuapp.com/api/v1/users|

### Headers
No headers required

### Input Schema for Requests
|Field|Meaning|
|------|------|
|email|user's valid email address|
|password|password chosen by user|
|password_confirmation|must be entered exactly the same as password|

### Output Schema of Request
|Field|Meaning|
|------|------|
|data|container for response data|
|id|user id|
|type|location in database|
|attributes|container for data of created user|
|email|user's email address|
|api_key|api key generated for user|

### Status Codes

|Code|Message|
|------|------|
|201|New user created|
|400|Email cannot be blank|
|400|Passwords do not match|
